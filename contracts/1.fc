{-
  TASK 1 - Find branch of the cell tree
  Write the method that will find a branch of the tree by comparing its
  hash with the hash received in the first parameter. When the algorithm finds
  the subtree (branch) whose hash equals the received hash, the root cell of
  this branch should be returned. Return empty cell if the branch is not found.
-}

() recv_internal() {
}

cell solution(int hash, cell cur) asm """
    <{  PUSHNULL
        AGAINBRK:
        // ... cur cs
        DROP DUP HASHCU 
    }>s x{82F0} |+ constant pref

    <{  EQUAL IFRETALT
        CTOS // ... cs
        DUP SREFS
        REPEAT: LDREF 
    }>s constant suff

    // hash cur
    SWAP 
    pref PUSHSLICE 
    NEWC STSLICE
    256 STU
    suff PUSHSLICE STSLICER
    ENDC CTOS BLESS
    <{ 2DROP	
       <b b> PUSHREF
    }>CONT
    TRY 
    1 PUSHINT ONLYTOPX
""";

;; testable
(cell) find_branch_by_hash(int hash, cell tree) method_id {
  return solution(hash, tree);
}
