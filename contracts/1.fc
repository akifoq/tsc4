{-
  TASK 1 - Find branch of the cell tree
  Write the method that will find a branch of the tree by comparing its
  hash with the hash received in the first parameter. When the algorithm finds
  the subtree (branch) whose hash equals the received hash, the root cell of
  this branch should be returned. Return empty cell if the branch is not found.
-}

() recv_internal() {
}

cell solution(int hash, cell cur) asm """
    SAMEALT
    SWAP // cur hash
    <{  AGAINBRK:
        // ... cur hash
        OVER HASHCU OVER EQUAL IFRETALT
        SWAP CTOS // ... hash cs
        DUP SREFS
        REPEAT:<{
            LDREF // ... hash ref cs
            s1 s2 XCHG
        }>
        DROP // ... hash
    }>CONT
    <{ 2DROP	
       <b b> PUSHREF RETALT
    }>CONT
    TRY

    DROP 1 PUSHINT ONLYTOPX
""";

;; testable
(cell) find_branch_by_hash(int hash, cell tree) method_id {
  return solution(hash, tree);
}
