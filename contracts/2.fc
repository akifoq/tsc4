{-
  TASK 2 - Matrix multiplier
  Write the method that multiplies one matrix by another.
  The 1st and 2nd parameter of the function will contain
  a matrix implemented using tuples (eg: [[1,2], [3,4]]).
  Matrices can be of different sizes, ranging from 4x4
  up to 32x32.
  Matrix can be rectangular where matrixA must to be of size n*m & matrixB of size m*p.
  After calculating the result matrix, the function should return final result (as tuple).
-}

() recv_internal() {
}

int len(tuple t) asm "TLEN";
forall X -> (tuple, ()) ~setindex(tuple t, X x, int k) asm "SETINDEXVAR";

global int n;

;; testable
(tuple) matrix_multiplier(tuple matrixA, tuple matrixB) method_id {
  int n = matrixA.len();
  int m = matrixA.at(0).len();
  int p = matrixB.at(0).len();

  tuple res_row = matrixB.at(0);
  int i = 0;
  repeat(p) {
    res_row~setindex(0, i);
    i += 1;
  }
  tuple res = matrixA;
  int i = 0;
  repeat(n) {
    res~setindex(res_row, i);
    i += 1;
  }

  int i = 0;
  repeat(n) {
    tuple row_A = matrixA.at(i);
    int j = 0;
    repeat(p) {
      int k = 0;
      repeat(m) { 
        tuple row = res.at(i);
        row~setindex(row_A.at(k) * matrixB.at(k).at(j) + row.at(j), j);
        res~setindex(row, i);
        k += 1;
      }
      j += 1;
    }
    i += 1;
  }

  return res;
}

